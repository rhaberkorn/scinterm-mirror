diff -r 3f9b065c4401 include/Platform.h
--- a/include/Platform.h	Wed Jul 11 12:43:34 2012 +1000
+++ b/include/Platform.h	Thu Jul 19 12:57:20 2012 -0400
@@ -22,6 +22,7 @@
 #define PLAT_WX  0
 #define PLAT_QT 0
 #define PLAT_FOX 0
+#define PLAT_TERM 0
 
 #if defined(FOX)
 #undef PLAT_FOX
@@ -31,6 +32,10 @@
 #undef PLAT_WX
 #define PLAT_WX  1
 
+#elif defined(NCURSES)
+#undef PLAT_TERM
+#define PLAT_TERM 1
+
 #elif defined(SCINTILLA_QT)
 #undef PLAT_QT
 #define PLAT_QT 1
@@ -364,7 +369,7 @@
 	void SetPosition(PRectangle rc);
 	void SetPositionRelative(PRectangle rc, Window relativeTo);
 	PRectangle GetClientPosition();
-	void Show(bool show=true);
+	virtual void Show(bool show=true);
 	void InvalidateAll();
 	void InvalidateRectangle(PRectangle rc);
 	virtual void SetFont(Font &font);
diff -r 3f9b065c4401 src/CallTip.cxx
--- a/src/CallTip.cxx	Wed Jul 11 12:43:34 2012 +1000
+++ b/src/CallTip.cxx	Thu Jul 19 12:57:20 2012 -0400
@@ -18,8 +18,8 @@
 using namespace Scintilla;
 #endif
 
-static const int insetX = 5;    // text inset in x from calltip border
-static const int widthArrow = 14;
+static const int insetX = 2;//5;    // text inset in x from calltip border
+static const int widthArrow = 1;//14;
 
 CallTip::CallTip() {
 	wCallTip = 0;
@@ -287,12 +287,12 @@
 	// Extra line for border and an empty line at top and bottom. The returned
 	// rectangle is aligned to the right edge of the last arrow encountered in
 	// the tip text, else to the tip text left edge.
-	int height = lineHeight * numLines - surfaceMeasure->InternalLeading(font) + 2 + 2;
+	int height = lineHeight * numLines - surfaceMeasure->InternalLeading(font) + 2;// + 2;
 	delete surfaceMeasure;
 	if (above) {
-		return PRectangle(pt.x - offsetMain, pt.y - 1 - height, pt.x + width - offsetMain, pt.y - 1);
+		return PRectangle(pt.x - offsetMain, pt.y - height, pt.x + width - offsetMain, pt.y);
 	} else {
-		return PRectangle(pt.x - offsetMain, pt.y + 1 + textHeight, pt.x + width - offsetMain, pt.y + 1 + textHeight + height);
+		return PRectangle(pt.x - offsetMain, pt.y + textHeight, pt.x + width - offsetMain, pt.y + textHeight + height);
 	}
 }
 
diff -r 3f9b065c4401 src/Editor.cxx
--- a/src/Editor.cxx	Wed Jul 11 12:43:34 2012 +1000
+++ b/src/Editor.cxx	Thu Jul 19 12:57:20 2012 -0400
@@ -1956,7 +1956,7 @@
 						PRectangle rcNumber = rcMarker;
 						// Right justify
 						XYPOSITION width = surface->WidthText(vs.styles[STYLE_LINENUMBER].font, number, istrlen(number));
-						XYPOSITION xpos = rcNumber.right - width - 3;
+						XYPOSITION xpos = rcNumber.right - width;// - 3;
 						rcNumber.left = xpos;
 						surface->DrawTextNoClip(rcNumber, vs.styles[STYLE_LINENUMBER].font,
 								rcNumber.top + vs.maxAscent, number, istrlen(number),
@@ -2200,7 +2200,7 @@
 								const char *ctrlChar = ControlCharacterString(ll->chars[charInLine]);
 								// +3 For a blank on front and rounded edge each side:
 								ctrlCharWidth[ll->chars[charInLine]] =
-								    surface->WidthText(ctrlCharsFont, ctrlChar, istrlen(ctrlChar)) + 3;
+								    surface->WidthText(ctrlCharsFont, ctrlChar, istrlen(ctrlChar));// + 3;
 							}
 							ll->positions[charInLine + 1] = ctrlCharWidth[ll->chars[charInLine]];
 						} else {
diff -r 3f9b065c4401 src/ScintillaBase.cxx
--- a/src/ScintillaBase.cxx	Wed Jul 11 12:43:34 2012 +1000
+++ b/src/ScintillaBase.cxx	Thu Jul 19 12:57:20 2012 -0400
@@ -226,8 +226,8 @@
 	if (rcPopupBounds.Height() == 0)
 		rcPopupBounds = rcClient;
 
-	int heightLB = 100;
-	int widthLB = 100;
+	int heightLB = 10;
+	int widthLB = 10;
 	if (pt.x >= rcClient.right - widthLB) {
 		HorizontalScrollTo(xOffset + pt.x - rcClient.right + widthLB);
 		Redraw();
